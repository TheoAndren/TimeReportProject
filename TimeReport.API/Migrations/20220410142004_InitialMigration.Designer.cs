// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeReport.API.Model;

namespace TimeReport.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220410142004_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeReport.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "jesper.bratt@gmail.com",
                            FirstName = "Jesper",
                            LastName = "Bratt",
                            PhoneNumber = "0725252"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "Dejan.kulu@gmail.com",
                            FirstName = "Dejan",
                            LastName = "Kulusevski",
                            PhoneNumber = "7535353"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email = "Zlatan.Zlantan.com",
                            FirstName = "Zlatan",
                            LastName = "Ibrahimovic",
                            PhoneNumber = "0563442"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Email = "Lewis.gb@gmail.com",
                            FirstName = "Lewis",
                            LastName = "Hamilton",
                            PhoneNumber = "0532523"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Email = "maxverstappen@hotmail.com",
                            FirstName = "Max",
                            LastName = "Verstappen",
                            PhoneNumber = "6463893"
                        });
                });

            modelBuilder.Entity("TimeReport.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            ProjectName = "Tågstationen Varberg"
                        },
                        new
                        {
                            ProjectId = 2,
                            ProjectName = "Nya Bygget Södergatan"
                        },
                        new
                        {
                            ProjectId = 3,
                            ProjectName = "Lägenhetsområade Engelbrektsgatan"
                        });
                });

            modelBuilder.Entity("TimeReport.TimeReport", b =>
                {
                    b.Property<int>("TimeReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("WorkedHours")
                        .HasColumnType("int");

                    b.HasKey("TimeReportId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("TimeReports");

                    b.HasData(
                        new
                        {
                            TimeReportId = 1,
                            Date = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            ProjectId = 1,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 2,
                            Date = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            ProjectId = 1,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 3,
                            Date = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            ProjectId = 1,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 4,
                            Date = new DateTime(2022, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            ProjectId = 1,
                            WorkedHours = 12
                        },
                        new
                        {
                            TimeReportId = 5,
                            Date = new DateTime(2022, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            ProjectId = 1,
                            WorkedHours = 4
                        },
                        new
                        {
                            TimeReportId = 6,
                            Date = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            ProjectId = 1,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 7,
                            Date = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            ProjectId = 2,
                            WorkedHours = 6
                        },
                        new
                        {
                            TimeReportId = 8,
                            Date = new DateTime(2022, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            ProjectId = 2,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 9,
                            Date = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            ProjectId = 3,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 10,
                            Date = new DateTime(2022, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            ProjectId = 3,
                            WorkedHours = 8
                        },
                        new
                        {
                            TimeReportId = 11,
                            Date = new DateTime(2022, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 5,
                            ProjectId = 3,
                            WorkedHours = 6
                        },
                        new
                        {
                            TimeReportId = 12,
                            Date = new DateTime(2022, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 4,
                            ProjectId = 2,
                            WorkedHours = 6
                        });
                });

            modelBuilder.Entity("TimeReport.TimeReport", b =>
                {
                    b.HasOne("TimeReport.Employee", "Employee")
                        .WithMany("TimeReports")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("TimeReport.Project", "Project")
                        .WithMany("TimeReports")
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
